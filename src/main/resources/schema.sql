DROP TABLE IF EXISTS rating_mpa, films, genre, film_genre, users, film_likes, friends;

CREATE TABLE IF NOT EXISTS rating_mpa (
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar
);

CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar(200),
    release_date date,
    duration integer,
    mpa_id int REFERENCES rating_mpa(id)
    );

CREATE TABLE IF NOT EXISTS genre (
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
    genre_id int REFERENCES genre(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar NOT NULL,
    login varchar NOT NULL,
    name varchar,
    birthday date
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
    );

CREATE TABLE IF NOT EXISTS friends (
    user_id BIGINT NOT NULL ,
    friend_id BIGINT NOT NULL ,
    PRIMARY KEY (user_id, friend_id),
    constraint uid FOREIGN KEY (user_id) references users(id),
    constraint fid foreign key (friend_id) references users(id)
    );